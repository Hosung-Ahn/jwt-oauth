server:
  port: 8081

spring:
  mvc:
    static-path-pattern: /static/**
  security:
    oauth2:
      client:
        registration:
          google :
            client-id: 85822608795-dn0gqbpjd7htsv4h4cg7428b09v2nmtc.apps.googleusercontent.com
            client-secret: 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
            scope:
              - openid
              - profile
              - email

          naver:
            client-id: hkO88kxDks1sJ6xZ9kK6
            client-secret: 1G1zwetuLZ
            authorization-grant-type: authorization_code
            client-name: naver-client-app
            redirect-uri: http://localhost:8081/login/oauth2/code/naver
            scope:
              - profile
              - email

          keycloak :
            client-id : oauth2-client-app
            client-secret: 4tb2P0Wtp7jdP1RbKflscci2fLN1y3oy
            client-name: oauth2-client-app
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_basic
            scope:
              - openid
              - profile
              - email
        provider:
          keycloak:
            authorization-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/auth
            token-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/token
            issuer-uri: http://localhost:8080/realms/oauth2
            user-info-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/certs
            user-name-attribute: preferred_username
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response
